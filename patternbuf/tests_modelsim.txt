*** CONDITIONALITY ***

* Reset Init z & n *
* Reset init instruction *

-- TESTS --

ORA 3 06_0_03_06_0_03
AND 5 06_1_05_06_1_05
ADDMA



-- MODELSIM --

add wave -position end  sim:/digital/clk
add wave -position end  sim:/digital/reset
add wave -position end  sim:/digital/pc
add wave -position end  sim:/digital/instruction
add wave -position end	sim:/digital/thePAT/acc
add wave -position end  sim:/digital/field_in
add wave -position end  sim:/digital/thePAT/i_t_i0
add wave -position end  sim:/digital/thePAT/i_t_i3
add wave -position end  sim:/digital/thePAT/i_t_i8
add wave -position end  sim:/digital/thePAT/immediate_i8
add wave -position end  sim:/digital/thePAT/immediate_i3
add wave -position end  sim:/digital/thePAT/condition
add wave -position end  sim:/digital/thePAT/acc_result
add wave -position end  sim:/digital/thePAT/field_result
add wave -position end  sim:/digital/thePAT/acc_alu_y
add wave -position end  sim:/digital/thePAT/field_alu_y
add wave -position end  sim:/digital/thePAT/opcode_i8
add wave -position end  sim:/digital/thePAT/opcode_i3
add wave -position end  sim:/digital/thePAT/opcode_i0
add wave -position end  sim:/digital/thePAT/field_op
add wave -position end  sim:/digital/thePAT/field_out_low
add wave -position end  sim:/digital/thePAT/field_out_high
add wave -position end  sim:/digital/thePAT/field_write_low
add wave -position end  sim:/digital/thePAT/field_write_high
add wave -position end  sim:/digital/thePAT/op_bf
add wave -position end  sim:/digital/thePAT/op_bb
add wave -position end  sim:/digital/thePAT/op_call
add wave -position end  sim:/digital/thePAT/op_ldi
add wave -position end  sim:/digital/thePAT/op_ldm
add wave -position end  sim:/digital/thePAT/op_stam
add wave -position end  sim:/digital/thePAT/op_setsp
add wave -position end  sim:/digital/thePAT/op_or
add wave -position end  sim:/digital/thePAT/op_and
add wave -position end  sim:/digital/thePAT/op_addm
add wave -position end  sim:/digital/thePAT/op_subm
add wave -position end  sim:/digital/thePAT/op_add
add wave -position end  sim:/digital/thePAT/op_sub
add wave -position end  sim:/digital/thePAT/op_orm
add wave -position end  sim:/digital/thePAT/op_andm
add wave -position end  sim:/digital/thePAT/op_in
add wave -position end  sim:/digital/thePAT/op_shl
add wave -position end  sim:/digital/thePAT/op_shr
add wave -position end  sim:/digital/thePAT/op_shlo
add wave -position end  sim:/digital/thePAT/op_asr
add wave -position end  sim:/digital/thePAT/op_out
add wave -position end  sim:/digital/thePAT/op_setb
add wave -position end  sim:/digital/thePAT/op_incsp
add wave -position end  sim:/digital/thePAT/op_decsp
add wave -position end  sim:/digital/thePAT/op_return
add wave -position end  sim:/digital/thePAT/op_not
add wave -position end  sim:/digital/thePAT/op_nop
add wave -position end  sim:/digital/thePAT/op_ldba
add wave -position end  sim:/digital/thePAT/op_stab
add wave -position end  sim:/digital/thePAT/op_lda
add wave -position end  sim:/digital/thePAT/op_ldsp
add wave -position end  sim:/digital/thePAT/op_stsp
add wave -position end  sim:/digital/thePAT/source_acc
add wave -position end  sim:/digital/thePAT/source_dmem
add wave -position end  sim:/digital/thePAT/source_field
add wave -position end  sim:/digital/thePAT/source_imm
add wave -position end  sim:/digital/thePAT/source_sp
add wave -position end  sim:/digital/thePAT/source_in
add wave -position end  sim:/digital/thePAT/dest_acc
add wave -position end  sim:/digital/thePAT/dest_dmem
add wave -position end  sim:/digital/thePAT/dest_field
add wave -position end  sim:/digital/thePAT/dest_sp
add wave -position end  sim:/digital/thePAT/dest_pc
add wave -position end  sim:/digital/thePAT/dest_reg
add wave -position end  sim:/digital/thePAT/dest_from_alu

mem load -filltype inc -filldata 0 -fillradix hexadecimal -skip 0 /digital/iBuffer/iMem/imem

mem load -filltype value -filldata {0700307003 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(0)
mem load -filltype value -filldata {00f9400680 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(1)
mem load -filltype value -filldata {0440400ff2 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(2)
mem load -filltype value -filldata {0040600405 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(3)
mem load -filltype value -filldata {008fc00407 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(4)
mem load -filltype value -filldata {0040a00409 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(5)
mem load -filltype value -filldata {0040c0040b } -fillradix hexadecimal /digital/iBuffer/iMem/imem(6)
mem load -filltype value -filldata {0040e0040d } -fillradix hexadecimal /digital/iBuffer/iMem/imem(7)
mem load -filltype value -filldata {004100040f } -fillradix hexadecimal /digital/iBuffer/iMem/imem(8)


force -freeze sim:/digital/field_toPAT_low 8'h42 0
force -freeze sim:/digital/field_toPAT_high 8'h82 0
force -freeze sim:/digital/thePAT/acc 8'h11 0 -cancel 1
force -freeze sim:/digital/clk 1 0, 0 {50 ns} -r 100
force -freeze sim:/digital/reset 1'h1 0
run
run
run
force -freeze sim:/digital/reset 1'h0 0
run 800


**** CHECK DEST_REG ****

==
op_bf not implemented in PC.
Signed jump available
8fc causes jump to same location
Instruction following jump will be executed, so probably should be a NOP.

TODO:
[tick] Check conditional execution
Look to fix jump follow instr. execute
[tick] Check field output mechanism works.
[tick] bufp and high-low mechanism
[confirmed] ldi doesn't init acc when not defined (i.e. Xs propagate)


-- Good things to init at reset -
* low_high_buffer
* bufp
* fieldp
* acc
* fieldp


===== PATTERNBUFFER ==============

add wave -position insertpoint  \ 
sim:/patternbuffer/clk
add wave -position insertpoint  \
sim:/patternbuffer/sclk \
sim:/patternbuffer/sin \
sim:/patternbuffer/ssel \
sim:/patternbuffer/pwm \
sim:/patternbuffer/reset \
sim:/patternbuffer/saddr

add wave -position insertpoint  \
sim:/patternbuffer/field_in_in \
sim:/patternbuffer/field_write_in \
sim:/patternbuffer/bufp_in \
sim:/patternbuffer/fieldp_in \
sim:/patternbuffer/fieldwp_in \
sim:/patternbuffer/sout \
sim:/patternbuffer/field_byte_out

add wave -position end  sim:/patternbuffer/bufp
add wave -position end  sim:/patternbuffer/buffer_select
add wave -position end  sim:/patternbuffer/fieldp
add wave -position end  sim:/patternbuffer/fieldp2
add wave -position end  sim:/patternbuffer/fieldp3
add wave -position end  sim:/patternbuffer/fieldp4
add wave -position end  sim:/patternbuffer/fieldwp
add wave -position end  sim:/patternbuffer/fieldwp_2

add wave -position end  sim:/patternbuffer/current_buffer
add wave -position end  sim:/patternbuffer/dead_time

add wave -position end  sim:/patternbuffer/p_drive
add wave -position end  sim:/patternbuffer/n_drive
add wave -position end  sim:/patternbuffer/tweak_global_delay
add wave -position end  sim:/patternbuffer/tweak_delay_0
add wave -position end  sim:/patternbuffer/tweak_delay_1
add wave -position end  sim:/patternbuffer/tweak_delay_2
add wave -position end  sim:/patternbuffer/tweak_delay_3
add wave -position end  sim:/patternbuffer/tweak_delay_4
add wave -position end  sim:/patternbuffer/tweak_delay_5
add wave -position end  sim:/patternbuffer/tweak_duration_0
add wave -position end  sim:/patternbuffer/tweak_duration_1
add wave -position end  sim:/patternbuffer/tweak_duration_2
add wave -position end  sim:/patternbuffer/tweak_duration_3
add wave -position end  sim:/patternbuffer/tweak_duration_4
add wave -position end  sim:/patternbuffer/tweak_duration_5
add wave -position end  sim:/patternbuffer/tweak_enable_0
add wave -position end  sim:/patternbuffer/tweak_enable_1
add wave -position end  sim:/patternbuffer/tweak_enable_2
add wave -position end  sim:/patternbuffer/tweak_enable_3
add wave -position end  sim:/patternbuffer/tweak_enable_4
add wave -position end  sim:/patternbuffer/tweak_enable_5
add wave -position end  sim:/patternbuffer/tweak_sense_0
add wave -position end  sim:/patternbuffer/tweak_sense_1
add wave -position end  sim:/patternbuffer/tweak_sense_2
add wave -position end  sim:/patternbuffer/tweak_sense_3
add wave -position end  sim:/patternbuffer/tweak_sense_4
add wave -position end  sim:/patternbuffer/tweak_sense_5
add wave -position 9  sim:/patternbuffer/field_in
add wave -position 10  sim:/patternbuffer/field_write

mem load -filltype inc -filldata 0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer1/pattern
mem load -filltype inc -filldata 20 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer2/pattern
mem load -filltype inc -filldata 40 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer3/pattern
mem load -filltype inc -filldata 60 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer4/pattern

mem load -filltype inc -filldata 80 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer5/pattern
mem load -filltype inc -filldata a0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer6/pattern
mem load -filltype inc -filldata c0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer7/pattern
mem load -filltype inc -filldata e0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer8/pattern



force -freeze sim:/patternbuffer/clk 1 0, 0 {50 ns} -r 100
force -freeze sim:/patternbuffer/sin 1'h0 0
force -freeze sim:/patternbuffer/sclk 1'h0 0
force -freeze sim:/patternbuffer/ssel 1'h0 0
force -freeze sim:/patternbuffer/saddr 1'h0 0
force -freeze sim:/patternbuffer/fieldp_in 1'h0 0
force -freeze sim:/patternbuffer/fieldwp_in 1'h0 0
force -freeze sim:/patternbuffer/bufp_in 1'h0 0
force -freeze sim:/patternbuffer/field_write_in 1'h0 
force -freeze sim:/patternbuffer/field_in_in 1'h0 


force -freeze sim:/patternbuffer/pwm 1'h0 0

force -freeze sim:/patternbuffer/reset 1'h1 0
run 300
force -freeze sim:/patternbuffer/reset 1'h0 0

force -freeze sim:/patternbuffer/pwm 1'h0 0
run 1000
force -freeze sim:/patternbuffer/pwm 1'h1 0
run 1000