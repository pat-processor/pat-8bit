TOD: 5J25CTFF

*** CONDITIONALITY ***
-- TESTS --

ORA 3 06_0_03_06_0_03
AND 5 06_1_05_06_1_05
ADDMA



-- MODELSIM --


add wave -position end  sim:/digital/thePAT/clk
add wave -position 1  sim:/digital/thePAT/reset
add wave -position end  sim:/digital/thePAT/Rd_2
add wave -position end  sim:/digital/thePAT/Rn
add wave -position end  sim:/digital/thePAT/condition_decoded
add wave -position end  sim:/digital/thePAT/data_in
add wave -position end  sim:/digital/thePAT/data_out
add wave -position end  sim:/digital/thePAT/data_read_adr
add wave -position end  sim:/digital/thePAT/data_write
add wave -position end  sim:/digital/thePAT/dest_field_regd
add wave -position end  sim:/digital/thePAT/dest_out_regd
add wave -position end  sim:/digital/thePAT/dest_pc_regd
add wave -position end  sim:/digital/thePAT/dest_reg_regd
add wave -position end  sim:/digital/thePAT/execute_next
add wave -position 3  sim:/digital/thePAT/field_op
add wave -position end  sim:/digital/thePAT/imm_alu_a
add wave -position end  sim:/digital/thePAT/imm_alu_b
add wave -position end  sim:/digital/thePAT/imm_alu_y
add wave -position 5  sim:/digital/thePAT/immediate_i_all
add wave -position 1  sim:/digital/thePAT/instruction_in
add wave -position 2  sim:/digital/thePAT/jumping
add wave -position end  sim:/digital/thePAT/reg_alu_a
add wave -position end  sim:/digital/thePAT/reg_alu_b
add wave -position end  sim:/digital/thePAT/reg_alu_y
add wave -position end  sim:/digital/thePAT/result
add wave -position end  /digital/thePAT/dmem/dmem
add wave -position 8  sim:/digital/thePAT/n
add wave -position 9  sim:/digital/thePAT/z






force -freeze sim:/digital/field_toPAT_low 8'h42 0
force -freeze sim:/digital/field_toPAT_high 8'h82 0
force -freeze sim:/digital/thePAT/data_out 8'h11 0 -cancel 1
force -freeze sim:/digital/thePAT/bubbles 2'b00 0 -cancel 1
force -freeze sim:/digital/thePAT/jump_forward 1'b0 0 -cancel 1
force -freeze sim:/digital/thePAT/jumping 1'b0 0 -cancel 1
force -freeze sim:/digital/thePAT/n 1'b0 0 -cancel 1
force -freeze sim:/digital/thePAT/z 1'b0 0 -cancel 1
mem load -filltype inc -filldata 0 -fillradix hexadecimal -skip 0 /digital/thePAT/dmem/dmem

mem load -filltype inc -filldata 0 -fillradix hexadecimal -skip 0 /digital/iBuffer/iMem/imem
mem load -filltype value -filldata {0700307003 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(0)
mem load -filltype value -filldata {0040200401 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(1)
mem load -filltype value -filldata {00ff000403 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(2)
mem load -filltype value -filldata {0040600405 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(3)
mem load -filltype value -filldata {00afc00407 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(4)
mem load -filltype value -filldata {0040a00409 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(5)
mem load -filltype value -filldata {00ff30040b } -fillradix hexadecimal /digital/iBuffer/iMem/imem(6)
mem load -filltype value -filldata {0040e0040d } -fillradix hexadecimal /digital/iBuffer/iMem/imem(7)
mem load -filltype value -filldata {004100040f } -fillradix hexadecimal /digital/iBuffer/iMem/imem(8)
mem load -i D:/pat/pat/patasm/pat.hex -format hex /digital/iBuffer/iMem/imem
mem load -filltype inc -filldata 0 -fillradix hexadecimal -skip 0 /digital/thePAT/dmem/dmem

force -freeze sim:/digital/iBuffer/iMem/imem_in 0 0
force -freeze sim:/digital/iBuffer/iMem/imem_write 1'h0 0
force -freeze sim:/digital/iBuffer/imem_write_adr 10'h000 0
force -freeze sim:/digital/thePAT/field_in_high 8'h42 0
force -freeze sim:/digital/thePAT/field_in_low 8'h43 0

force -freeze sim:/digital/clk 1 0, 0 {50 ns} -r 100
force -freeze sim:/digital/reset 1'h1 0
run
run
run
force -freeze sim:/digital/reset 1'h0 0
run 800


N.B. LDI shows as OR 0



*** 
Mem load and branch ***
mem load -filltype value -filldata {0700307003 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(0)
mem load -filltype value -filldata {00f9400680 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(1)
mem load -filltype value -filldata {0440400b01 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(2)
mem load -filltype value -filldata {0040600405 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(3)
mem load -filltype value -filldata {008f800701 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(4)
mem load -filltype value -filldata {0040a00409 } -fillradix hexadecimal /digital/iBuffer/iMem/imem(5)
mem load -filltype value -filldata {0040c0040b } -fillradix hexadecimal /digital/iBuffer/iMem/imem(6)
mem load -filltype value -filldata {0040e0040d } -fillradix hexadecimal /digital/iBuffer/iMem/imem(7)
mem load -filltype value -filldata {004100040f } -fillradix hexadecimal /digital/iBuffer/iMem/imem(8)



**** CHECK DEST_REG ****

==
op_bf not implemented in PC.
Signed jump available
8fc causes jump to same location
Instruction following jump will be executed, so probably should be a NOP.

TODO:
[tick] Check conditional execution
Look to fix jump follow instr. execute
- due to FO pipelining of instruction_1 from instruction_in
[tick] Check field output mechanism works.
[tick] bufp and high-low mechanism
[confirmed] ldi doesn't init acc when not defined (i.e. Xs propagate)
** conditional jump not implemented yet (jump instruction always flushes pipeline)
- implementing update at end of pipeline offers opportunity to pipeline the add operation (remove from critical path).
- ** Move PC updates to Decode stage from Ex stage.

-- Good things to init at reset -
* low_high_buffer
* bufp
* fieldp
* acc
* fieldp
* bubbles


===== PATTERNBUFFER ==============

add wave -position insertpoint  \ 
sim:/patternbuffer/clk
add wave -position insertpoint  \
sim:/patternbuffer/sclk \
sim:/patternbuffer/sin \
sim:/patternbuffer/ssel \
sim:/patternbuffer/pwm \
sim:/patternbuffer/reset \
sim:/patternbuffer/saddr

add wave -position insertpoint  \
sim:/patternbuffer/field_in_in \
sim:/patternbuffer/field_write_in \
sim:/patternbuffer/bufp_in \
sim:/patternbuffer/fieldp_in \
sim:/patternbuffer/fieldwp_in \
sim:/patternbuffer/sout \
sim:/patternbuffer/field_byte_out

add wave -position end  sim:/patternbuffer/bufp
add wave -position end  sim:/patternbuffer/buffer_select
add wave -position end  sim:/patternbuffer/fieldp
add wave -position end  sim:/patternbuffer/fieldp2
add wave -position end  sim:/patternbuffer/fieldp3
add wave -position end  sim:/patternbuffer/fieldp4
add wave -position end  sim:/patternbuffer/fieldwp
add wave -position end  sim:/patternbuffer/fieldwp_2

add wave -position end  sim:/patternbuffer/current_buffer
add wave -position end  sim:/patternbuffer/dead_time

add wave -position end  sim:/patternbuffer/p_drive
add wave -position end  sim:/patternbuffer/n_drive
add wave -position end  sim:/patternbuffer/tweak_global_delay
add wave -position end  sim:/patternbuffer/tweak_delay_0
add wave -position end  sim:/patternbuffer/tweak_delay_1
add wave -position end  sim:/patternbuffer/tweak_delay_2
add wave -position end  sim:/patternbuffer/tweak_delay_3
add wave -position end  sim:/patternbuffer/tweak_delay_4
add wave -position end  sim:/patternbuffer/tweak_delay_5
add wave -position end  sim:/patternbuffer/tweak_duration_0
add wave -position end  sim:/patternbuffer/tweak_duration_1
add wave -position end  sim:/patternbuffer/tweak_duration_2
add wave -position end  sim:/patternbuffer/tweak_duration_3
add wave -position end  sim:/patternbuffer/tweak_duration_4
add wave -position end  sim:/patternbuffer/tweak_duration_5
add wave -position end  sim:/patternbuffer/tweak_enable_0
add wave -position end  sim:/patternbuffer/tweak_enable_1
add wave -position end  sim:/patternbuffer/tweak_enable_2
add wave -position end  sim:/patternbuffer/tweak_enable_3
add wave -position end  sim:/patternbuffer/tweak_enable_4
add wave -position end  sim:/patternbuffer/tweak_enable_5
add wave -position end  sim:/patternbuffer/tweak_sense_0
add wave -position end  sim:/patternbuffer/tweak_sense_1
add wave -position end  sim:/patternbuffer/tweak_sense_2
add wave -position end  sim:/patternbuffer/tweak_sense_3
add wave -position end  sim:/patternbuffer/tweak_sense_4
add wave -position end  sim:/patternbuffer/tweak_sense_5
add wave -position 9  sim:/patternbuffer/field_in
add wave -position 10  sim:/patternbuffer/field_write

mem load -filltype inc -filldata 0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer1/pattern
mem load -filltype inc -filldata 20 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer2/pattern
mem load -filltype inc -filldata 40 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer3/pattern
mem load -filltype inc -filldata 60 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer4/pattern

mem load -filltype inc -filldata 80 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer5/pattern
mem load -filltype inc -filldata a0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer6/pattern
mem load -filltype inc -filldata c0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer7/pattern
mem load -filltype inc -filldata e0 -fillradix hexadecimal -skip 0 /patternbuffer/theBuffers/buffer8/pattern



force -freeze sim:/patternbuffer/clk 1 0, 0 {50 ns} -r 100
force -freeze sim:/patternbuffer/sin 1'h0 0
force -freeze sim:/patternbuffer/sclk 1'h0 0
force -freeze sim:/patternbuffer/ssel 1'h0 0
force -freeze sim:/patternbuffer/saddr 1'h0 0
force -freeze sim:/patternbuffer/fieldp_in 1'h0 0
force -freeze sim:/patternbuffer/fieldwp_in 1'h0 0
force -freeze sim:/patternbuffer/bufp_in 1'h0 0
force -freeze sim:/patternbuffer/field_write_in 1'h0 
force -freeze sim:/patternbuffer/field_in_in 1'h0 


force -freeze sim:/patternbuffer/pwm 1'h0 0

force -freeze sim:/patternbuffer/reset 1'h1 0
run 300
force -freeze sim:/patternbuffer/reset 1'h0 0

force -freeze sim:/patternbuffer/pwm 1'h0 0
run 1000
force -freeze sim:/patternbuffer/pwm 1'h1 0
run 1000